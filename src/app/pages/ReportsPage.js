import React, { useState } from "react";
import { Row, Col, Card, Button, Spinner } from "react-bootstrap";
import { AuthContext } from "../pages/auth/AuthProvider";
import ReportHistory from "../views/ReportHistory";
import axios from "../service/Axios";
export default function ReportsPage() {
  const { state: authState } = React.useContext(AuthContext);

  const [isLoading, setisLoading] = useState(false);
  const [success, setsuccess] = useState({
    isDone: false,
    url: null,
    download: null,
  });

  const user = authState.user;

  const payload = {
    userId: user.id,
  };

  const generateReport = async () => {
    setisLoading(true);
    await axios({ url: `/reports`, method: "POST", data: payload, responseType: "blob" })
      .then((response) => {
        setisLoading(false);
        const url = window.URL.createObjectURL(new Blob([response.data]));
        const contentDisposition = response.headers["content-disposition"];
        let filename = "";
        if (contentDisposition && contentDisposition.indexOf("attachment") !== -1) {
          let filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
          let matches = filenameRegex.exec(contentDisposition);
          if (matches != null && matches[1]) {
            filename = matches[1].replace(/['"]/g, "");
          }
        }
        setsuccess({
          isDone: true,
          url: url,
          download: filename,
        });
      })
      .catch((err) => {
        console.log(err);
        setisLoading(false);
      });
  };

  return (
    <>
      <Row>
        <Col lg={8}>
          <Card>
            <Card.Body>
              <Card.Title>
                <h2 className="font-weight-bolder">Reports</h2>
                <span className="text-muted">Last 3 reports generated by system</span>
              </Card.Title>
              <ReportHistory reload={success}/>
            </Card.Body>
          </Card>
        </Col>
        <Col lg={4}>
          <Card>
            <Card.Body>
              <Card.Title>
                <h3 className="font-weight-bolder">Reports</h3>
                <span className="text-muted">Contain inventory details</span>
              </Card.Title>
              <Button className="mr-3" variant="warning" onClick={() => generateReport()}>
                Generate{" "}
                {isLoading ? (
                  <Spinner
                    as="span"
                    animation="border"
                    size="sm"
                    role="status"
                    aria-hidden="true"
                  />
                ) : (
                  ""
                )}
              </Button>
              {success.isDone ? (
                <Button variant="success" as="a" href={success.url} download={success.download}>
                  Download
                </Button>
              ) : (
                ""
              )}
            </Card.Body>
          </Card>
        </Col>
      </Row>
    </>
  );
}
